/*
 * generated by Xtext
 * XTend: Java Dialekt, an manchen stellen etwas verk√ºrzt. Wird nicht in Bytecode kompiliert sondern
 * direkt in Java
 */
package de.tu_bs.cs.isf.mbse.mbtimes.validation

import de.tu_bs.cs.isf.mbse.mbtimes.npl.Date
import de.tu_bs.cs.isf.mbse.mbtimes.npl.Declaration
import de.tu_bs.cs.isf.mbse.mbtimes.npl.NplPackage
import java.util.Arrays
import org.eclipse.xtext.validation.Check

/**
 * This class checks whether a user has typed in a name for the newspaper. 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class NplValidator extends AbstractNplValidator {

	
	/*
	 * This constraint checks whether the number of articles is positive and smaller than 6.
	 */
	@Check
	def checkNrArticles(Declaration articles) {
		if (articles.articleCnt < 1 || articles.articleCnt > 5) {
			error("Number of articles must be greater than 0 and smaller than 6", NplPackage.Literals.DECLARATION__ARTICLE_CNT)
		}
	}
	
	/*
	 * This constraint checks whether the number of images is positive and smaller than 6.
	 */
	@Check
	def checkNrImages(Declaration images) {
		if (images.imagesCnt < 1 || images.imagesCnt > 5) {
			error("Number of images must be greater than 0 and smaller than 6", NplPackage.Literals.DECLARATION__IMAGES_CNT)
		}
	}

	@Check
	def checkDate(Date date) {
		var int[] days30 = #[4,6,9,11];
		if (date.month < 1 || date.month > 12) {
			error("Number " + date.month + " does not refer to any valid month.", NplPackage.Literals.DATE__MONTH)
		} 
		if (date.day < 1) {
			error("Please enter a positive number.", NplPackage.Literals.DATE__DAY)
		}
		if (date.month.equals(2)) {
			if (date.year % 4 == 0 && date.day > 29) {
				error("In a leap-year, february has 29 days.", NplPackage.Literals.DATE__DAY)
			} else if (date.day > 28) {
				error("Usually, february has 28 days.", NplPackage.Literals.DATE__DAY)
			}
		} else {
			if (Arrays.asList(days30).contains(date.month) && (date.day > 30)) {
				error("This month has only 30 days.", NplPackage.Literals.DATE__DAY)
			} else if (date.day > 31) {
				error("This month has only 31 days.", NplPackage.Literals.DATE__DAY)
			}
			
		}
	}


//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
}
