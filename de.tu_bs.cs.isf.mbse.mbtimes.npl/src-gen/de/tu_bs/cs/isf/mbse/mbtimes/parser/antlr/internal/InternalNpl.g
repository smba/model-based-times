/*
 * generated by Xtext
 */
grammar InternalNpl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.tu_bs.cs.isf.mbse.mbtimes.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.tu_bs.cs.isf.mbse.mbtimes.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.tu_bs.cs.isf.mbse.mbtimes.services.NplGrammarAccess;

}

@parser::members {

 	private NplGrammarAccess grammarAccess;
 	
    public InternalNplParser(TokenStream input, NplGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Declaration";	
   	}
   	
   	@Override
   	protected NplGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='newspaper' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeclarationAccess().getNewspaperKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='feed links' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclarationAccess().getFeedLinksKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeclarationAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getFeedlinksPairParserRuleCall_5_0()); 
	    }
		lv_feedlinks_5_0=rulePair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		add(
       			$current, 
       			"feedlinks",
        		lv_feedlinks_5_0, 
        		"Pair");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=', ' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDeclarationAccess().getCommaSpaceKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getPairsPairParserRuleCall_6_1_0()); 
	    }
		lv_pairs_7_0=rulePair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_7_0, 
        		"Pair");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDeclarationAccess().getRightCurlyBracketKeyword_7());
    }
	otherlv_9='topics' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDeclarationAccess().getTopicsKeyword_8());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDeclarationAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getTopicsTopicParserRuleCall_10_0()); 
	    }
		lv_topics_11_0=ruleTopic		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		add(
       			$current, 
       			"topics",
        		lv_topics_11_0, 
        		"Topic");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getTopicsTopicParserRuleCall_11_0()); 
	    }
		lv_topics_12_0=ruleTopic		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		add(
       			$current, 
       			"topics",
        		lv_topics_12_0, 
        		"Topic");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDeclarationAccess().getRightCurlyBracketKeyword_12());
    }
(	otherlv_14='date' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDeclarationAccess().getDateKeyword_13_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getDateDateParserRuleCall_13_1_0()); 
	    }
		lv_date_15_0=ruleDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"date",
        		lv_date_15_0, 
        		"Date");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_16='location' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDeclarationAccess().getLocationKeyword_14_0());
    }
(
(
		lv_location_17_0=RULE_STRING
		{
			newLeafNode(lv_location_17_0, grammarAccess.getDeclarationAccess().getLocationSTRINGTerminalRuleCall_14_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"location",
        		lv_location_17_0, 
        		"STRING");
	    }

)
))?	otherlv_18='price' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDeclarationAccess().getPriceKeyword_15());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getPricePriceParserRuleCall_16_0()); 
	    }
		lv_price_19_0=rulePrice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"price",
        		lv_price_19_0, 
        		"Price");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20='volume' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDeclarationAccess().getVolumeKeyword_17_0());
    }
(
(
		lv_volume_21_0=RULE_INT
		{
			newLeafNode(lv_volume_21_0, grammarAccess.getDeclarationAccess().getVolumeINTTerminalRuleCall_17_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"volume",
        		lv_volume_21_0, 
        		"INT");
	    }

)
))?	otherlv_22='language' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getDeclarationAccess().getLanguageKeyword_18());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getLanguageLanguageParserRuleCall_19_0()); 
	    }
		lv_language_23_0=ruleLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"language",
        		lv_language_23_0, 
        		"Language");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24='format' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getDeclarationAccess().getFormatKeyword_20());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getFormatFormatParserRuleCall_21_0()); 
	    }
		lv_format_25_0=ruleFormat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"format",
        		lv_format_25_0, 
        		"Format");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_26='number of articles per topic' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getDeclarationAccess().getNumberOfArticlesPerTopicKeyword_22());
    }
(
(
		lv_article_cnt_27_0=RULE_INT
		{
			newLeafNode(lv_article_cnt_27_0, grammarAccess.getDeclarationAccess().getArticle_cntINTTerminalRuleCall_23_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"article_cnt",
        		lv_article_cnt_27_0, 
        		"INT");
	    }

)
)	otherlv_28='number of words per article' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getDeclarationAccess().getNumberOfWordsPerArticleKeyword_24());
    }
(
(
		lv_article_char_min_29_0=RULE_INT
		{
			newLeafNode(lv_article_char_min_29_0, grammarAccess.getDeclarationAccess().getArticle_char_minINTTerminalRuleCall_25_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"article_char_min",
        		lv_article_char_min_29_0, 
        		"INT");
	    }

)
)	otherlv_30='-' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getDeclarationAccess().getHyphenMinusKeyword_26());
    }
(
(
		lv_article_char_max_31_0=RULE_INT
		{
			newLeafNode(lv_article_char_max_31_0, grammarAccess.getDeclarationAccess().getArticle_char_maxINTTerminalRuleCall_27_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"article_char_max",
        		lv_article_char_max_31_0, 
        		"INT");
	    }

)
)(	otherlv_32='number of images per article' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getDeclarationAccess().getNumberOfImagesPerArticleKeyword_28_0());
    }
(
(
		lv_article_images_33_0=RULE_INT
		{
			newLeafNode(lv_article_images_33_0, grammarAccess.getDeclarationAccess().getArticle_imagesINTTerminalRuleCall_28_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"article_images",
        		lv_article_images_33_0, 
        		"INT");
	    }

)
))?	otherlv_34='number of columns' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getDeclarationAccess().getNumberOfColumnsKeyword_29());
    }
(
(
		lv_columns_cnt_35_0=RULE_INT
		{
			newLeafNode(lv_columns_cnt_35_0, grammarAccess.getDeclarationAccess().getColumns_cntINTTerminalRuleCall_30_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"columns_cnt",
        		lv_columns_cnt_35_0, 
        		"INT");
	    }

)
)	otherlv_36='font size' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getDeclarationAccess().getFontSizeKeyword_31());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getFont_sizeFontSizeParserRuleCall_32_0()); 
	    }
		lv_font_size_37_0=ruleFontSize		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"font_size",
        		lv_font_size_37_0, 
        		"FontSize");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_38='}' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getDeclarationAccess().getRightCurlyBracketKeyword_33());
    }
)
;





// Entry rule entryRuleFontSize
entryRuleFontSize returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontSizeRule()); }
	 iv_ruleFontSize=ruleFontSize 
	 { $current=$iv_ruleFontSize.current; } 
	 EOF 
;

// Rule FontSize
ruleFontSize returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFontSizeAccess().getEStringAction_0_0(),
            $current);
    }
)	otherlv_1='small' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFontSizeAccess().getSmallKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFontSizeAccess().getEStringAction_1_0(),
            $current);
    }
)	otherlv_3='medium' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFontSizeAccess().getMediumKeyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFontSizeAccess().getEStringAction_2_0(),
            $current);
    }
)	otherlv_5='large' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFontSizeAccess().getLargeKeyword_2_1());
    }
))
;





// Entry rule entryRuleFormat
entryRuleFormat returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormatRule()); }
	 iv_ruleFormat=ruleFormat 
	 { $current=$iv_ruleFormat.current; } 
	 EOF 
;

// Rule Format
ruleFormat returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormatAccess().getEStringAction_0_0(),
            $current);
    }
)	otherlv_1='DIN A6' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFormatAccess().getDINA6Keyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormatAccess().getEStringAction_1_0(),
            $current);
    }
)	otherlv_3='DIN A5' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFormatAccess().getDINA5Keyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormatAccess().getEStringAction_2_0(),
            $current);
    }
)	otherlv_5='DIN A4' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFormatAccess().getDINA4Keyword_2_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormatAccess().getEStringAction_3_0(),
            $current);
    }
)	otherlv_7='DIN A3' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFormatAccess().getDINA3Keyword_3_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormatAccess().getEStringAction_4_0(),
            $current);
    }
)	otherlv_9='DIN A2' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFormatAccess().getDINA2Keyword_4_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormatAccess().getEStringAction_5_0(),
            $current);
    }
)	otherlv_11='DIN A1' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFormatAccess().getDINA1Keyword_5_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormatAccess().getEStringAction_6_0(),
            $current);
    }
)	otherlv_13='DIN A0' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFormatAccess().getDINA0Keyword_6_1());
    }
))
;





// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	 iv_ruleDate=ruleDate 
	 { $current=$iv_ruleDate.current; } 
	 EOF 
;

// Rule Date
ruleDate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDateAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_day_1_0=RULE_INT
		{
			newLeafNode(lv_day_1_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"day",
        		lv_day_1_0, 
        		"INT");
	    }

)
)	otherlv_2='-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
    }
(
(
		lv_month_3_0=RULE_INT
		{
			newLeafNode(lv_month_3_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"month",
        		lv_month_3_0, 
        		"INT");
	    }

)
)	otherlv_4='-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
    }
(
(
		lv_year_5_0=RULE_INT
		{
			newLeafNode(lv_year_5_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"year",
        		lv_year_5_0, 
        		"INT");
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDateAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleLanguage
entryRuleLanguage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLanguageRule()); }
	 iv_ruleLanguage=ruleLanguage 
	 { $current=$iv_ruleLanguage.current; } 
	 EOF 
;

// Rule Language
ruleLanguage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLanguageAccess().getEStringAction_0_0(),
            $current);
    }
)	otherlv_1='English' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLanguageAccess().getEnglishKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLanguageAccess().getEStringAction_1_0(),
            $current);
    }
)	otherlv_3='German' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLanguageAccess().getGermanKeyword_1_1());
    }
))
;





// Entry rule entryRulePrice
entryRulePrice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPriceRule()); }
	 iv_rulePrice=rulePrice 
	 { $current=$iv_rulePrice.current; } 
	 EOF 
;

// Rule Price
rulePrice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPriceAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_value_1_0=RULE_PREIS
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPriceAccess().getValuePREISTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPriceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"PREIS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPriceAccess().getCurrencyCurrencyParserRuleCall_2_0()); 
	    }
		lv_currency_2_0=ruleCurrency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPriceRule());
	        }
       		set(
       			$current, 
       			"currency",
        		lv_currency_2_0, 
        		"Currency");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPriceAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleCurrency
entryRuleCurrency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCurrencyRule()); }
	 iv_ruleCurrency=ruleCurrency 
	 { $current=$iv_ruleCurrency.current; } 
	 EOF 
;

// Rule Currency
ruleCurrency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCurrencyAccess().getEStringAction_0_0(),
            $current);
    }
)	otherlv_1='Euro [\u20AC]' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getEuroKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCurrencyAccess().getEStringAction_1_0(),
            $current);
    }
)	otherlv_3='Dollar [$]' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCurrencyAccess().getDollarKeyword_1_1());
    }
))
;





// Entry rule entryRuleTopic
entryRuleTopic returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopicRule()); }
	 iv_ruleTopic=ruleTopic 
	 { $current=$iv_ruleTopic.current; } 
	 EOF 
;

// Rule Topic
ruleTopic returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='topic' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTopicAccess().getTopicKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTopicAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopicRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTopicAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTopicAccess().getTagsTopicTagParserRuleCall_3_0()); 
	    }
		lv_tags_3_0=ruleTopicTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopicRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_3_0, 
        		"TopicTag");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=', ' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTopicAccess().getCommaSpaceKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTopicAccess().getTagsTopicTagParserRuleCall_4_1_0()); 
	    }
		lv_tags_5_0=ruleTopicTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopicRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_5_0, 
        		"TopicTag");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTopicAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTopicTag
entryRuleTopicTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopicTagRule()); }
	 iv_ruleTopicTag=ruleTopicTag 
	 { $current=$iv_ruleTopicTag.current; } 
	 EOF 
;

// Rule TopicTag
ruleTopicTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getTopicTagAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopicTagRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRulePair
entryRulePair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPairRule()); }
	 iv_rulePair=rulePair 
	 { $current=$iv_rulePair.current; } 
	 EOF 
;

// Rule Pair
rulePair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getPairAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPairAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getPairAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





RULE_PREIS : ('0'..'9')+ (','|'.')* ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


