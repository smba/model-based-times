/*
 * generated by Xtext
 */
package de.tu_bs.cs.isf.mbse.mbtimes.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class NplGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Declaration");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cNewspaperKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Assignment cRecrawlAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cRecrawlRecrawlKeyword_1_0_0 = (Keyword)cRecrawlAssignment_1_0.eContents().get(0);
		private final Keyword cFeedLinksKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cFeedlinksAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cFeedlinksPairParserRuleCall_1_3_0 = (RuleCall)cFeedlinksAssignment_1_3.eContents().get(0);
		private final Assignment cFeedlinksAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cFeedlinksPairParserRuleCall_1_4_0 = (RuleCall)cFeedlinksAssignment_1_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cTopicsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTopicsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTopicsTopicParserRuleCall_2_2_0 = (RuleCall)cTopicsAssignment_2_2.eContents().get(0);
		private final Assignment cTopicsAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cTopicsTopicParserRuleCall_2_3_0 = (RuleCall)cTopicsAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cOptionalDateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDateDateParserRuleCall_3_1_0 = (RuleCall)cDateAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cOptionalLocationKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLocationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLocationSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cLocationAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cOptionalPriceKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPriceAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPricePriceParserRuleCall_5_1_0 = (RuleCall)cPriceAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cUnorderedGroup.eContents().get(6);
		private final Keyword cOptionalVolumeKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cVolumeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cVolumeINTTerminalRuleCall_6_1_0 = (RuleCall)cVolumeAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cNoKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cNumberAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cNumberINTTerminalRuleCall_6_2_1_0 = (RuleCall)cNumberAssignment_6_2_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cUnorderedGroup.eContents().get(7);
		private final Keyword cOptionalLanguageKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cLanguageAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cLanguageLanguageParserRuleCall_7_1_0 = (RuleCall)cLanguageAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cUnorderedGroup.eContents().get(8);
		private final Keyword cFormatKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cFormatAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cFormatFormatParserRuleCall_8_1_0 = (RuleCall)cFormatAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cUnorderedGroup.eContents().get(9);
		private final Keyword cNumberOfArticlesPerTopicKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cArticleCntAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cArticleCntINTTerminalRuleCall_9_1_0 = (RuleCall)cArticleCntAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cUnorderedGroup.eContents().get(10);
		private final Keyword cNumberOfWordsPerArticleKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cArticleWordsMinAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cArticleWordsMinINTTerminalRuleCall_10_1_0 = (RuleCall)cArticleWordsMinAssignment_10_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cArticleWordsMaxAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cArticleWordsMaxINTTerminalRuleCall_10_3_0 = (RuleCall)cArticleWordsMaxAssignment_10_3.eContents().get(0);
		private final Group cGroup_11 = (Group)cUnorderedGroup.eContents().get(11);
		private final Keyword cOptionalNumberOfImagesPerArticleKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cImagesCntAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cImagesCntImagesCountParserRuleCall_11_1_0 = (RuleCall)cImagesCntAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cUnorderedGroup.eContents().get(12);
		private final Keyword cNumberOfColumnsKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cColumnsCntAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cColumnsCntINTTerminalRuleCall_12_1_0 = (RuleCall)cColumnsCntAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cUnorderedGroup.eContents().get(13);
		private final Keyword cFontSizeKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cFontSizeAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cFontSizeFontSizeParserRuleCall_13_1_0 = (RuleCall)cFontSizeAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cUnorderedGroup.eContents().get(14);
		
		//Declaration:
		//	"newspaper" name=ID "{" & recrawl?="recrawl" "feed links" "{"
		//	feedlinks+=Pair feedlinks+=Pair*
		//	"}" &
		//	"topics" "{"
		//	topics+=Topic topics+=Topic*
		//	"}" & ("optional: date" date=Date)? & ("optional: location" location=STRING)? & ("optional: price" price=Price)? &
		//	("optional: volume" volume=INT ("no." number=INT)?)? & ("optional: language" language=Language)? &
		//	"format" format=Format &
		//	"number of articles per topic" articleCnt=INT &
		//	"number of words per article" articleWordsMin=INT "-" articleWordsMax=INT & ("optional: number of images per article"
		//	imagesCnt=ImagesCount)? &
		//	"number of columns" columnsCnt=INT &
		//	"font size" fontSize=FontSize &
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//"newspaper" name=ID "{" & recrawl?="recrawl" "feed links" "{" feedlinks+=Pair feedlinks+=Pair* "}" & "topics" "{"
		//topics+=Topic topics+=Topic* "}" & ("optional: date" date=Date)? & ("optional: location" location=STRING)? &
		//("optional: price" price=Price)? & ("optional: volume" volume=INT ("no." number=INT)?)? & ("optional: language"
		//language=Language)? & "format" format=Format & "number of articles per topic" articleCnt=INT &
		//"number of words per article" articleWordsMin=INT "-" articleWordsMax=INT & ("optional: number of images per article"
		//imagesCnt=ImagesCount)? & "number of columns" columnsCnt=INT & "font size" fontSize=FontSize & "}"
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }

		//"newspaper" name=ID "{"
		public Group getGroup_0() { return cGroup_0; }

		//"newspaper"
		public Keyword getNewspaperKeyword_0_0() { return cNewspaperKeyword_0_0; }

		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_2() { return cLeftCurlyBracketKeyword_0_2; }

		//recrawl?="recrawl" "feed links" "{" feedlinks+=Pair feedlinks+=Pair* "}"
		public Group getGroup_1() { return cGroup_1; }

		//recrawl?="recrawl"
		public Assignment getRecrawlAssignment_1_0() { return cRecrawlAssignment_1_0; }

		//"recrawl"
		public Keyword getRecrawlRecrawlKeyword_1_0_0() { return cRecrawlRecrawlKeyword_1_0_0; }

		//"feed links"
		public Keyword getFeedLinksKeyword_1_1() { return cFeedLinksKeyword_1_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_2() { return cLeftCurlyBracketKeyword_1_2; }

		//feedlinks+=Pair
		public Assignment getFeedlinksAssignment_1_3() { return cFeedlinksAssignment_1_3; }

		//Pair
		public RuleCall getFeedlinksPairParserRuleCall_1_3_0() { return cFeedlinksPairParserRuleCall_1_3_0; }

		//feedlinks+=Pair*
		public Assignment getFeedlinksAssignment_1_4() { return cFeedlinksAssignment_1_4; }

		//Pair
		public RuleCall getFeedlinksPairParserRuleCall_1_4_0() { return cFeedlinksPairParserRuleCall_1_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_5() { return cRightCurlyBracketKeyword_1_5; }

		//"topics" "{" topics+=Topic topics+=Topic* "}"
		public Group getGroup_2() { return cGroup_2; }

		//"topics"
		public Keyword getTopicsKeyword_2_0() { return cTopicsKeyword_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }

		//topics+=Topic
		public Assignment getTopicsAssignment_2_2() { return cTopicsAssignment_2_2; }

		//Topic
		public RuleCall getTopicsTopicParserRuleCall_2_2_0() { return cTopicsTopicParserRuleCall_2_2_0; }

		//topics+=Topic*
		public Assignment getTopicsAssignment_2_3() { return cTopicsAssignment_2_3; }

		//Topic
		public RuleCall getTopicsTopicParserRuleCall_2_3_0() { return cTopicsTopicParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }

		//("optional: date" date=Date)?
		public Group getGroup_3() { return cGroup_3; }

		//"optional: date"
		public Keyword getOptionalDateKeyword_3_0() { return cOptionalDateKeyword_3_0; }

		//date=Date
		public Assignment getDateAssignment_3_1() { return cDateAssignment_3_1; }

		//Date
		public RuleCall getDateDateParserRuleCall_3_1_0() { return cDateDateParserRuleCall_3_1_0; }

		//("optional: location" location=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"optional: location"
		public Keyword getOptionalLocationKeyword_4_0() { return cOptionalLocationKeyword_4_0; }

		//location=STRING
		public Assignment getLocationAssignment_4_1() { return cLocationAssignment_4_1; }

		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_4_1_0() { return cLocationSTRINGTerminalRuleCall_4_1_0; }

		//("optional: price" price=Price)?
		public Group getGroup_5() { return cGroup_5; }

		//"optional: price"
		public Keyword getOptionalPriceKeyword_5_0() { return cOptionalPriceKeyword_5_0; }

		//price=Price
		public Assignment getPriceAssignment_5_1() { return cPriceAssignment_5_1; }

		//Price
		public RuleCall getPricePriceParserRuleCall_5_1_0() { return cPricePriceParserRuleCall_5_1_0; }

		//("optional: volume" volume=INT ("no." number=INT)?)?
		public Group getGroup_6() { return cGroup_6; }

		//"optional: volume"
		public Keyword getOptionalVolumeKeyword_6_0() { return cOptionalVolumeKeyword_6_0; }

		//volume=INT
		public Assignment getVolumeAssignment_6_1() { return cVolumeAssignment_6_1; }

		//INT
		public RuleCall getVolumeINTTerminalRuleCall_6_1_0() { return cVolumeINTTerminalRuleCall_6_1_0; }

		//("no." number=INT)?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//"no."
		public Keyword getNoKeyword_6_2_0() { return cNoKeyword_6_2_0; }

		//number=INT
		public Assignment getNumberAssignment_6_2_1() { return cNumberAssignment_6_2_1; }

		//INT
		public RuleCall getNumberINTTerminalRuleCall_6_2_1_0() { return cNumberINTTerminalRuleCall_6_2_1_0; }

		//("optional: language" language=Language)?
		public Group getGroup_7() { return cGroup_7; }

		//"optional: language"
		public Keyword getOptionalLanguageKeyword_7_0() { return cOptionalLanguageKeyword_7_0; }

		//language=Language
		public Assignment getLanguageAssignment_7_1() { return cLanguageAssignment_7_1; }

		//Language
		public RuleCall getLanguageLanguageParserRuleCall_7_1_0() { return cLanguageLanguageParserRuleCall_7_1_0; }

		//"format" format=Format
		public Group getGroup_8() { return cGroup_8; }

		//"format"
		public Keyword getFormatKeyword_8_0() { return cFormatKeyword_8_0; }

		//format=Format
		public Assignment getFormatAssignment_8_1() { return cFormatAssignment_8_1; }

		//Format
		public RuleCall getFormatFormatParserRuleCall_8_1_0() { return cFormatFormatParserRuleCall_8_1_0; }

		//"number of articles per topic" articleCnt=INT
		public Group getGroup_9() { return cGroup_9; }

		//"number of articles per topic"
		public Keyword getNumberOfArticlesPerTopicKeyword_9_0() { return cNumberOfArticlesPerTopicKeyword_9_0; }

		//articleCnt=INT
		public Assignment getArticleCntAssignment_9_1() { return cArticleCntAssignment_9_1; }

		//INT
		public RuleCall getArticleCntINTTerminalRuleCall_9_1_0() { return cArticleCntINTTerminalRuleCall_9_1_0; }

		//"number of words per article" articleWordsMin=INT "-" articleWordsMax=INT
		public Group getGroup_10() { return cGroup_10; }

		//"number of words per article"
		public Keyword getNumberOfWordsPerArticleKeyword_10_0() { return cNumberOfWordsPerArticleKeyword_10_0; }

		//articleWordsMin=INT
		public Assignment getArticleWordsMinAssignment_10_1() { return cArticleWordsMinAssignment_10_1; }

		//INT
		public RuleCall getArticleWordsMinINTTerminalRuleCall_10_1_0() { return cArticleWordsMinINTTerminalRuleCall_10_1_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_10_2() { return cHyphenMinusKeyword_10_2; }

		//articleWordsMax=INT
		public Assignment getArticleWordsMaxAssignment_10_3() { return cArticleWordsMaxAssignment_10_3; }

		//INT
		public RuleCall getArticleWordsMaxINTTerminalRuleCall_10_3_0() { return cArticleWordsMaxINTTerminalRuleCall_10_3_0; }

		//("optional: number of images per article" imagesCnt=ImagesCount)?
		public Group getGroup_11() { return cGroup_11; }

		//"optional: number of images per article"
		public Keyword getOptionalNumberOfImagesPerArticleKeyword_11_0() { return cOptionalNumberOfImagesPerArticleKeyword_11_0; }

		//imagesCnt=ImagesCount
		public Assignment getImagesCntAssignment_11_1() { return cImagesCntAssignment_11_1; }

		//ImagesCount
		public RuleCall getImagesCntImagesCountParserRuleCall_11_1_0() { return cImagesCntImagesCountParserRuleCall_11_1_0; }

		//"number of columns" columnsCnt=INT
		public Group getGroup_12() { return cGroup_12; }

		//"number of columns"
		public Keyword getNumberOfColumnsKeyword_12_0() { return cNumberOfColumnsKeyword_12_0; }

		//columnsCnt=INT
		public Assignment getColumnsCntAssignment_12_1() { return cColumnsCntAssignment_12_1; }

		//INT
		public RuleCall getColumnsCntINTTerminalRuleCall_12_1_0() { return cColumnsCntINTTerminalRuleCall_12_1_0; }

		//"font size" fontSize=FontSize
		public Group getGroup_13() { return cGroup_13; }

		//"font size"
		public Keyword getFontSizeKeyword_13_0() { return cFontSizeKeyword_13_0; }

		//fontSize=FontSize
		public Assignment getFontSizeAssignment_13_1() { return cFontSizeAssignment_13_1; }

		//FontSize
		public RuleCall getFontSizeFontSizeParserRuleCall_13_1_0() { return cFontSizeFontSizeParserRuleCall_13_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class ImagesCountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.ImagesCount");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		/// **
		// * 
		// * / ImagesCount:
		//	value=INT;
		@Override public ParserRule getRule() { return rule; }

		//value=INT
		public Assignment getValueAssignment() { return cValueAssignment; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_0() { return cValueINTTerminalRuleCall_0; }
	}

	public class FontSizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.FontSize");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cValueSmallKeyword_0_0 = (Keyword)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cValueMediumKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cValueLargeKeyword_2_0 = (Keyword)cValueAssignment_2.eContents().get(0);
		
		//// Nutzer kann auswählen, ob die Schriftgröße klein, medium und groß sein soll. Größe sollte 
		//// abhängig vom gewählten Format festgelegt. 
		//FontSize:
		//	value="small" | value="medium" | value="large";
		@Override public ParserRule getRule() { return rule; }

		//value="small" | value="medium" | value="large"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value="small"
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//"small"
		public Keyword getValueSmallKeyword_0_0() { return cValueSmallKeyword_0_0; }

		//value="medium"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"medium"
		public Keyword getValueMediumKeyword_1_0() { return cValueMediumKeyword_1_0; }

		//value="large"
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"large"
		public Keyword getValueLargeKeyword_2_0() { return cValueLargeKeyword_2_0; }
	}

	public class FormatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Format");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cValueDINA6Keyword_0_0 = (Keyword)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cValueDINA5Keyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cValueDINA4Keyword_2_0 = (Keyword)cValueAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cValueDINA3Keyword_3_0 = (Keyword)cValueAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cValueDINA2Keyword_4_0 = (Keyword)cValueAssignment_4.eContents().get(0);
		private final Assignment cValueAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cValueDINA1Keyword_5_0 = (Keyword)cValueAssignment_5.eContents().get(0);
		private final Assignment cValueAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cValueDINA0Keyword_6_0 = (Keyword)cValueAssignment_6.eContents().get(0);
		
		//Format:
		//	value="DIN A6" | value="DIN A5" | value="DIN A4" | value="DIN A3" | value="DIN A2" | value="DIN A1" | value="DIN A0";
		@Override public ParserRule getRule() { return rule; }

		//value="DIN A6" | value="DIN A5" | value="DIN A4" | value="DIN A3" | value="DIN A2" | value="DIN A1" | value="DIN A0"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value="DIN A6"
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//"DIN A6"
		public Keyword getValueDINA6Keyword_0_0() { return cValueDINA6Keyword_0_0; }

		//value="DIN A5"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"DIN A5"
		public Keyword getValueDINA5Keyword_1_0() { return cValueDINA5Keyword_1_0; }

		//value="DIN A4"
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"DIN A4"
		public Keyword getValueDINA4Keyword_2_0() { return cValueDINA4Keyword_2_0; }

		//value="DIN A3"
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//"DIN A3"
		public Keyword getValueDINA3Keyword_3_0() { return cValueDINA3Keyword_3_0; }

		//value="DIN A2"
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"DIN A2"
		public Keyword getValueDINA2Keyword_4_0() { return cValueDINA2Keyword_4_0; }

		//value="DIN A1"
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }

		//"DIN A1"
		public Keyword getValueDINA1Keyword_5_0() { return cValueDINA1Keyword_5_0; }

		//value="DIN A0"
		public Assignment getValueAssignment_6() { return cValueAssignment_6; }

		//"DIN A0"
		public Keyword getValueDINA0Keyword_6_0() { return cValueDINA0Keyword_6_0; }
	}

	public class DateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Date");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDayAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDayINTTerminalRuleCall_1_0 = (RuleCall)cDayAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMonthAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMonthINTTerminalRuleCall_3_0 = (RuleCall)cMonthAssignment_3.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cYearAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cYearINTTerminalRuleCall_5_0 = (RuleCall)cYearAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Date:
		//	"{" day=INT '-' month=INT '-' year=INT "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" day=INT '-' month=INT '-' year=INT "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//day=INT
		public Assignment getDayAssignment_1() { return cDayAssignment_1; }

		//INT
		public RuleCall getDayINTTerminalRuleCall_1_0() { return cDayINTTerminalRuleCall_1_0; }

		//'-'
		public Keyword getHyphenMinusKeyword_2() { return cHyphenMinusKeyword_2; }

		//month=INT
		public Assignment getMonthAssignment_3() { return cMonthAssignment_3; }

		//INT
		public RuleCall getMonthINTTerminalRuleCall_3_0() { return cMonthINTTerminalRuleCall_3_0; }

		//'-'
		public Keyword getHyphenMinusKeyword_4() { return cHyphenMinusKeyword_4; }

		//year=INT
		public Assignment getYearAssignment_5() { return cYearAssignment_5; }

		//INT
		public RuleCall getYearINTTerminalRuleCall_5_0() { return cYearINTTerminalRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class LanguageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Language");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cValueEnglishKeyword_0_0 = (Keyword)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cValueGermanKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		
		//Language:
		//	value="English" | value="German";
		@Override public ParserRule getRule() { return rule; }

		//value="English" | value="German"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value="English"
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//"English"
		public Keyword getValueEnglishKeyword_0_0() { return cValueEnglishKeyword_0_0; }

		//value="German"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"German"
		public Keyword getValueGermanKeyword_1_0() { return cValueGermanKeyword_1_0; }
	}

	public class PriceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Price");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueFloatParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final Assignment cCurrencyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCurrencyCurrencyParserRuleCall_2_0 = (RuleCall)cCurrencyAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Price:
		//	"{" value=Float currency=Currency "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" value=Float currency=Currency "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//value=Float
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//Float
		public RuleCall getValueFloatParserRuleCall_1_0() { return cValueFloatParserRuleCall_1_0; }

		//currency=Currency
		public Assignment getCurrencyAssignment_2() { return cCurrencyAssignment_2; }

		//Currency
		public RuleCall getCurrencyCurrencyParserRuleCall_2_0() { return cCurrencyCurrencyParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class CurrencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Currency");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cValueEuroKeyword_0_0 = (Keyword)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cValueEURKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cValueEuroSignKeyword_2_0 = (Keyword)cValueAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cValueDollarKeyword_3_0 = (Keyword)cValueAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cValueUSDKeyword_4_0 = (Keyword)cValueAssignment_4.eContents().get(0);
		private final Assignment cValueAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cValueDollarSignKeyword_5_0 = (Keyword)cValueAssignment_5.eContents().get(0);
		
		//Currency:
		//	value="Euro" | value="EUR" | value="€" | value="Dollar" | value="USD" | value="$";
		@Override public ParserRule getRule() { return rule; }

		//value="Euro" | value="EUR" | value="€" | value="Dollar" | value="USD" | value="$"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value="Euro"
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//"Euro"
		public Keyword getValueEuroKeyword_0_0() { return cValueEuroKeyword_0_0; }

		//value="EUR"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"EUR"
		public Keyword getValueEURKeyword_1_0() { return cValueEURKeyword_1_0; }

		//value="€"
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"€"
		public Keyword getValueEuroSignKeyword_2_0() { return cValueEuroSignKeyword_2_0; }

		//value="Dollar"
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//"Dollar"
		public Keyword getValueDollarKeyword_3_0() { return cValueDollarKeyword_3_0; }

		//value="USD"
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"USD"
		public Keyword getValueUSDKeyword_4_0() { return cValueUSDKeyword_4_0; }

		//value="$"
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }

		//"$"
		public Keyword getValueDollarSignKeyword_5_0() { return cValueDollarSignKeyword_5_0; }
	}

	public class TopicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Topic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTopicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTagsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTagsTopicTagParserRuleCall_3_0 = (RuleCall)cTagsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaSpaceKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTagsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTagsTopicTagParserRuleCall_4_1_0 = (RuleCall)cTagsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Topic:
		//	"topic" name=ID "{"
		//	tags+=TopicTag (", " tags+=TopicTag)*
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//"topic" name=ID "{" tags+=TopicTag (", " tags+=TopicTag)* "}"
		public Group getGroup() { return cGroup; }

		//"topic"
		public Keyword getTopicKeyword_0() { return cTopicKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//tags+=TopicTag
		public Assignment getTagsAssignment_3() { return cTagsAssignment_3; }

		//TopicTag
		public RuleCall getTagsTopicTagParserRuleCall_3_0() { return cTagsTopicTagParserRuleCall_3_0; }

		//(", " tags+=TopicTag)*
		public Group getGroup_4() { return cGroup_4; }

		//", "
		public Keyword getCommaSpaceKeyword_4_0() { return cCommaSpaceKeyword_4_0; }

		//tags+=TopicTag
		public Assignment getTagsAssignment_4_1() { return cTagsAssignment_4_1; }

		//TopicTag
		public RuleCall getTagsTopicTagParserRuleCall_4_1_0() { return cTagsTopicTagParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class TopicTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.TopicTag");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//TopicTag:
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }

		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}

	public class PairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Pair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeFeedTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeySTRINGTerminalRuleCall_1_0 = (RuleCall)cKeyAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueURLTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Pair:
		//	type=FeedType key=STRING "<" value=URL ">";
		@Override public ParserRule getRule() { return rule; }

		//type=FeedType key=STRING "<" value=URL ">"
		public Group getGroup() { return cGroup; }

		//type=FeedType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//FeedType
		public RuleCall getTypeFeedTypeParserRuleCall_0_0() { return cTypeFeedTypeParserRuleCall_0_0; }

		//key=STRING
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_1_0() { return cKeySTRINGTerminalRuleCall_1_0; }

		//"<"
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }

		//value=URL
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//URL
		public RuleCall getValueURLTerminalRuleCall_3_0() { return cValueURLTerminalRuleCall_3_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_4() { return cGreaterThanSignKeyword_4; }
	}

	public class FloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.Float");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Keyword cFullStopKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Keyword cCommaKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//Float ecore::EFloat:
		//	INT (('.' | ',') INT)?
		@Override public ParserRule getRule() { return rule; }

		//INT (('.' | ',') INT)?
		public Group getGroup() { return cGroup; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//(('.' | ',') INT)?
		public Group getGroup_1() { return cGroup_1; }

		//('.' | ',')
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//'.'
		public Keyword getFullStopKeyword_1_0_0() { return cFullStopKeyword_1_0_0; }

		//','
		public Keyword getCommaKeyword_1_0_1() { return cCommaKeyword_1_0_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }
	}

	public class FeedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.FeedType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cRSSKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cAtomKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//FeedType:
		//	"RSS" |
		//	"Atom";
		@Override public ParserRule getRule() { return rule; }

		//"RSS" | "Atom"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"RSS"
		public Keyword getRSSKeyword_0() { return cRSSKeyword_0; }

		//"Atom"
		public Keyword getAtomKeyword_1() { return cAtomKeyword_1; }
	}
	
	
	private final DeclarationElements pDeclaration;
	private final ImagesCountElements pImagesCount;
	private final FontSizeElements pFontSize;
	private final FormatElements pFormat;
	private final DateElements pDate;
	private final LanguageElements pLanguage;
	private final PriceElements pPrice;
	private final CurrencyElements pCurrency;
	private final TopicElements pTopic;
	private final TopicTagElements pTopicTag;
	private final PairElements pPair;
	private final TerminalRule tURL;
	private final FloatElements pFloat;
	private final FeedTypeElements pFeedType;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public NplGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDeclaration = new DeclarationElements();
		this.pImagesCount = new ImagesCountElements();
		this.pFontSize = new FontSizeElements();
		this.pFormat = new FormatElements();
		this.pDate = new DateElements();
		this.pLanguage = new LanguageElements();
		this.pPrice = new PriceElements();
		this.pCurrency = new CurrencyElements();
		this.pTopic = new TopicElements();
		this.pTopicTag = new TopicTagElements();
		this.pPair = new PairElements();
		this.tURL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.tu_bs.cs.isf.mbse.mbtimes.Npl.URL");
		this.pFloat = new FloatElements();
		this.pFeedType = new FeedTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.tu_bs.cs.isf.mbse.mbtimes.Npl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Declaration:
	//	"newspaper" name=ID "{" & recrawl?="recrawl" "feed links" "{"
	//	feedlinks+=Pair feedlinks+=Pair*
	//	"}" &
	//	"topics" "{"
	//	topics+=Topic topics+=Topic*
	//	"}" & ("optional: date" date=Date)? & ("optional: location" location=STRING)? & ("optional: price" price=Price)? &
	//	("optional: volume" volume=INT ("no." number=INT)?)? & ("optional: language" language=Language)? &
	//	"format" format=Format &
	//	"number of articles per topic" articleCnt=INT &
	//	"number of words per article" articleWordsMin=INT "-" articleWordsMax=INT & ("optional: number of images per article"
	//	imagesCnt=ImagesCount)? &
	//	"number of columns" columnsCnt=INT &
	//	"font size" fontSize=FontSize &
	//	"}";
	public DeclarationElements getDeclarationAccess() {
		return pDeclaration;
	}
	
	public ParserRule getDeclarationRule() {
		return getDeclarationAccess().getRule();
	}

	/// **
	// * 
	// * / ImagesCount:
	//	value=INT;
	public ImagesCountElements getImagesCountAccess() {
		return pImagesCount;
	}
	
	public ParserRule getImagesCountRule() {
		return getImagesCountAccess().getRule();
	}

	//// Nutzer kann auswählen, ob die Schriftgröße klein, medium und groß sein soll. Größe sollte 
	//// abhängig vom gewählten Format festgelegt. 
	//FontSize:
	//	value="small" | value="medium" | value="large";
	public FontSizeElements getFontSizeAccess() {
		return pFontSize;
	}
	
	public ParserRule getFontSizeRule() {
		return getFontSizeAccess().getRule();
	}

	//Format:
	//	value="DIN A6" | value="DIN A5" | value="DIN A4" | value="DIN A3" | value="DIN A2" | value="DIN A1" | value="DIN A0";
	public FormatElements getFormatAccess() {
		return pFormat;
	}
	
	public ParserRule getFormatRule() {
		return getFormatAccess().getRule();
	}

	//Date:
	//	"{" day=INT '-' month=INT '-' year=INT "}";
	public DateElements getDateAccess() {
		return pDate;
	}
	
	public ParserRule getDateRule() {
		return getDateAccess().getRule();
	}

	//Language:
	//	value="English" | value="German";
	public LanguageElements getLanguageAccess() {
		return pLanguage;
	}
	
	public ParserRule getLanguageRule() {
		return getLanguageAccess().getRule();
	}

	//Price:
	//	"{" value=Float currency=Currency "}";
	public PriceElements getPriceAccess() {
		return pPrice;
	}
	
	public ParserRule getPriceRule() {
		return getPriceAccess().getRule();
	}

	//Currency:
	//	value="Euro" | value="EUR" | value="€" | value="Dollar" | value="USD" | value="$";
	public CurrencyElements getCurrencyAccess() {
		return pCurrency;
	}
	
	public ParserRule getCurrencyRule() {
		return getCurrencyAccess().getRule();
	}

	//Topic:
	//	"topic" name=ID "{"
	//	tags+=TopicTag (", " tags+=TopicTag)*
	//	"}";
	public TopicElements getTopicAccess() {
		return pTopic;
	}
	
	public ParserRule getTopicRule() {
		return getTopicAccess().getRule();
	}

	//TopicTag:
	//	value=STRING;
	public TopicTagElements getTopicTagAccess() {
		return pTopicTag;
	}
	
	public ParserRule getTopicTagRule() {
		return getTopicTagAccess().getRule();
	}

	//Pair:
	//	type=FeedType key=STRING "<" value=URL ">";
	public PairElements getPairAccess() {
		return pPair;
	}
	
	public ParserRule getPairRule() {
		return getPairAccess().getRule();
	}

	//terminal URL:
	//	'a'..'z'+ '://' ('0'..'9'+ '.' '0'..'9'+ '.' '0'..'9'+ '.' '0'..'9'+
	//	| ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' |
	//	'0'..'9' |
	//	'$' |
	//	'-' |
	//	'_' |
	//	'\\' ('0'..'9' | 'a'..'f' | 'A'..'F') ('0'..'9' | 'a'..'f' | 'A'..'F') |
	//	'%'
	//	'0'..'9' '0'..'9')* ('.' ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' |
	//	'0'..'9' |
	//	'$' |
	//	'-' |
	//	'_' |
	//	'\\' ('0'..'9' | 'a'..'f' | 'A'..'F') ('0'..'9' | 'a'..'f' | 'A'..'F') |
	//	'%'
	//	'0'..'9' '0'..'9')*)*) (':' '0'..'9'+)? ('/' ('a'..'z' | 'A'..'Z' |
	//	'0'..'9' |
	//	'$' |
	//	'-' |
	//	'_' |
	//	'~' |
	//	'+' |
	//	'.' |
	//	'\\' ('0'..'9' | 'a'..'f' | 'A'..'F') ('0'..'9' | 'a'..'f' | 'A'..'F') |
	//	'%'
	//	'0'..'9' '0'..'9')*)* ('?' ('a'..'z' | 'A'..'Z' |
	//	'0'..'9' |
	//	'$' |
	//	'-' |
	//	'_' |
	//	'=' |
	//	'&' |
	//	';' |
	//	'\\' ('0'..'9' | 'a'..'f' | 'A'..'F') ('0'..'9' | 'a'..'f' | 'A'..'F') |
	//	'%'
	//	'0'..'9' '0'..'9')+ ('+' ('a'..'z' | 'A'..'Z' |
	//	'0'..'9' |
	//	'$' |
	//	'-' |
	//	'_' |
	//	'=' |
	//	'&' |
	//	';' |
	//	'\\' ('0'..'9' | 'a'..'f' | 'A'..'F') ('0'..'9' | 'a'..'f' | 'A'..'F') |
	//	'%'
	//	'0'..'9' '0'..'9')+)*)?;
	public TerminalRule getURLRule() {
		return tURL;
	} 

	//Float ecore::EFloat:
	//	INT (('.' | ',') INT)?
	public FloatElements getFloatAccess() {
		return pFloat;
	}
	
	public ParserRule getFloatRule() {
		return getFloatAccess().getRule();
	}

	//FeedType:
	//	"RSS" |
	//	"Atom";
	public FeedTypeElements getFeedTypeAccess() {
		return pFeedType;
	}
	
	public ParserRule getFeedTypeRule() {
		return getFeedTypeAccess().getRule();
	}

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
